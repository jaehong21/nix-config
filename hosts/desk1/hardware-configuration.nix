# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "uas" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/9aed240d-856f-49f5-9540-44050b96f173"; # label: NIXROOT
      fsType = "ext4";
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/8C59-FF17"; # label: NIXBOOT
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };
  # NOTE: `sudo mkfs.ext4 /dev/sda` manually
  fileSystems."/mnt/sda" =
    {
      device = "/dev/disk/by-uuid/50a525d2-cef0-4bc6-ba34-7525c661c80a"; # /dev/sda, HDD, 3.6TB
      fsType = "ext4";
    };
  # NOTE: `sudo mkfs.ext4 /dev/sdb` manually
  fileSystems."/mnt/sdb" =
    {
      device = "/dev/disk/by-uuid/5fb21900-20e7-4348-bef7-181db666eb44"; # /dev/sdb, SSD, 111.8GB
      fsType = "ext4";
    };

  # Mount NFS
  systemd.mounts = [
    {
      what = "192.168.0.9:/volume1/nfs";
      where = "/mnt/nas";
      type = "nfs";
      options = "nfsvers=4,rw,nolock,soft";
      wantedBy = [ "multi-user.target" ];
    }
  ];

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
